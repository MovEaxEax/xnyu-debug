#pragma once

struct GameInput
{
    bool ESC;
    bool TAB;
    bool LSHIFT;
    bool RSHIFT;
    bool CTRL;
    bool ALT;
    bool BACK;
    bool RETURN;
    bool SPACE;
    bool AUP;
    bool ARIGHT;
    bool ADOWN;
    bool ALEFT;
    bool D0;
    bool D1;
    bool D2;
    bool D3;
    bool D4;
    bool D5;
    bool D6;
    bool D7;
    bool D8;
    bool D9;
    bool A;
    bool B;
    bool C;
    bool D;
    bool E;
    bool F;
    bool G;
    bool H;
    bool I;
    bool J;
    bool K;
    bool L;
    bool M;
    bool N;
    bool O;
    bool P;
    bool Q;
    bool R;
    bool S;
    bool T;
    bool U;
    bool V;
    bool W;
    bool X;
    bool Y;
    bool Z;
    bool NUM0;
    bool NUM1;
    bool NUM2;
    bool NUM3;
    bool NUM4;
    bool NUM5;
    bool NUM6;
    bool NUM7;
    bool NUM8;
    bool NUM9;
    bool NUMDIV;
    bool NUMMUL;
    bool NUMMIN;
    bool NUMPLU;
    bool NUMRET;
    bool NUMDEL;
    bool F1;
    bool F2;
    bool F3;
    bool F4;
    bool F5;
    bool F6;
    bool F7;
    bool F8;
    bool F9;
    bool F10;
    bool F11;
    bool F12;
    bool COMMA;
    bool DOT;
    bool PLUS;
    bool MINUS;
    bool LMB;
    bool RMB;
    bool MB;
    bool ME1;
    bool ME2;
    int WHEEL;
    int MOUSEX;
    int MOUSEY;
    bool JOYA;
    bool JOYB;
    bool JOYX;
    bool JOYY;
    bool JOYSTART;
    bool JOYSELECT;
    bool JOYRB;
    bool JOYLB;
    bool JOYUP;
    bool JOYDOWN;
    bool JOYRIGHT;
    bool JOYLEFT;
    int JOYRT;
    int JOYLT;
    int JOYRAXISX;
    int JOYRAXISY;
    int JOYLAXISX;
    int JOYLAXISY;
    bool JOYRS;
    bool JOYLS;
    bool SETMOUSE;
};

struct GameInputLayout
{
    std::string ESC;
    std::string TAB;
    std::string LSHIFT;
    std::string RSHIFT;
    std::string CTRL;
    std::string ALT;
    std::string BACK;
    std::string RETURN;
    std::string SPACE;
    std::string AUP;
    std::string ARIGHT;
    std::string ADOWN;
    std::string ALEFT;
    std::string D0;
    std::string D1;
    std::string D2;
    std::string D3;
    std::string D4;
    std::string D5;
    std::string D6;
    std::string D7;
    std::string D8;
    std::string D9;
    std::string A;
    std::string B;
    std::string C;
    std::string D;
    std::string E;
    std::string F;
    std::string G;
    std::string H;
    std::string I;
    std::string J;
    std::string K;
    std::string L;
    std::string M;
    std::string N;
    std::string O;
    std::string P;
    std::string Q;
    std::string R;
    std::string S;
    std::string T;
    std::string U;
    std::string V;
    std::string W;
    std::string X;
    std::string Y;
    std::string Z;
    std::string NUM0;
    std::string NUM1;
    std::string NUM2;
    std::string NUM3;
    std::string NUM4;
    std::string NUM5;
    std::string NUM6;
    std::string NUM7;
    std::string NUM8;
    std::string NUM9;
    std::string NUMDIV;
    std::string NUMMUL;
    std::string NUMMIN;
    std::string NUMPLU;
    std::string NUMRET;
    std::string NUMDEL;
    std::string F1;
    std::string F2;
    std::string F3;
    std::string F4;
    std::string F5;
    std::string F6;
    std::string F7;
    std::string F8;
    std::string F9;
    std::string F10;
    std::string F11;
    std::string F12;
    std::string COMMA;
    std::string DOT;
    std::string PLUS;
    std::string MINUS;
    std::string LMB;
    std::string RMB;
    std::string MB;
    std::string ME1;
    std::string ME2;
    std::string WHEEL;
    std::string MOUSEX;
    std::string MOUSEY;
    std::string JOYA;
    std::string JOYB;
    std::string JOYX;
    std::string JOYY;
    std::string JOYSTART;
    std::string JOYSELECT;
    std::string JOYRB;
    std::string JOYLB;
    std::string JOYUP;
    std::string JOYDOWN;
    std::string JOYRIGHT;
    std::string JOYLEFT;
    std::string JOYRT;
    std::string JOYLT;
    std::string JOYRAXISX;
    std::string JOYRAXISY;
    std::string JOYLAXISX;
    std::string JOYLAXISY;
    std::string JOYRS;
    std::string JOYLS;
};

void MergeGameInputs(GameInput* DST, GameInput* MOUSE, GameInput* KEYBOARD, GameInput* JOYSTICK);
void LoadGameInputLayout(GameInputLayout* DST, std::string fileName);
